<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<studentSubmits submitId="U3_sub3">
    <description>Student submits for Round U3 submit 3 (project_U3_sub3_1.xlsx)</description>
    <referenceZip>Round_U3_sub1_reference.zip</referenceZip>
    <student studentId="585224">
        <surname>Aumasto</surname>
        <firstname>Axel Joakim</firstname>
        <submitZip>Round_U3_sub3_585224.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(6):MSG:(INS#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(1):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(1):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="473624">
        <surname>Heinil√§</surname>
        <firstname>Toni Eino Mikael</firstname>
        <submitZip>Round_U3_sub3_473624.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(2):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(2):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="525747">
        <surname>J√§rvi</surname>
        <firstname>Antti Oskari</firstname>
        <submitZip>Round_U3_sub3_525747.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(3):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'title'. One of '{title}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(3):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="525750">
        <surname>J√§rvinen</surname>
        <firstname>Axel Gilbert Juhani</firstname>
        <submitZip>Round_U3_sub3_525750.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'lang' must appear on element 'description'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'lang' must appear on element 'description'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'lang' must appear on element 'description'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(4):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>9</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(4):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
    </student>
    <student studentId="525763">
        <surname>J√§√§skel√§inen</surname>
        <firstname>Heikki Sakari</firstname>
        <submitZip>Round_U3_sub3_525763.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(5):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>9</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(5):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
    </student>
    <student studentId="529138">
        <surname>Karhula</surname>
        <firstname>Niko Petteri</firstname>
        <submitZip>Round_U3_sub3_529138.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(3):MSG:(INS#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(4):MSG:(INS#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(6):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(6):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="60882H">
        <surname>Keskinen</surname>
        <firstname>Sami Antero Mikael</firstname>
        <submitZip>Round_U3_sub3_60882H.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(7):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>9</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(7):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
    </student>
    <student studentId="526212">
        <surname>Lahti</surname>
        <firstname>Patrick Marco Daniel</firstname>
        <submitZip>Round_U3_sub3_526212.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.d: Invalid content was found starting with element 'unit'. No child element is expected at this point.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.d: Invalid content was found starting with element 'unit'. No child element is expected at this point.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(8):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(8):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="592767">
        <surname>Lappalainen</surname>
        <firstname>Sampo Antti</firstname>
        <submitZip>Round_U3_sub3_592767.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(3):MSG:(INS#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(4):MSG:(INS#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(9):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(9):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="588166">
        <surname>Martikainen</surname>
        <firstname>Elvira</firstname>
        <submitZip>Round_U3_sub3_588166.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(10):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(10):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="430793">
        <surname>M√§kinen</surname>
        <firstname>Anssi Antero</firstname>
        <submitZip>Round_U3_sub3_430793.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(11):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>9</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(11):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
    </student>
    <student studentId="526775">
        <surname>M√§kinen</surname>
        <firstname>Samu Joonatan</firstname>
        <submitZip>Round_U3_sub3_526775.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:null)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <feedback>(1): File books.xml missing</feedback>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(3:XSLT_TRANSFORM_1):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(5:XSLT_TRANSFORM_2):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(7:XSLT_TRANSFORM_3):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(12):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:null)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(12):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <feedback>(4): File inventions.xml missing</feedback>
        </exercise>
    </student>
    <student studentId="480387">
        <surname>Nurmi</surname>
        <firstname>Kasper Viljami Nikolai</firstname>
        <submitZip>Round_U3_sub3_480387.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(3):MSG:(INS#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-datatype-valid.1.2.1: '1m20cm' is not a valid value for 'integer'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(13):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(13):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="588823">
        <surname>Paasonen</surname>
        <firstname>Tommi Kalervo</firstname>
        <submitZip>Round_U3_sub3_588823.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.3: Element 'books' cannot have character [children], because the type's content type is element-only.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <feedback>(1): Character '-' in line 8 not allowed</feedback>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(7):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is OK (&gt;= 11)&#xD;
elements with @name: is OK (&gt;= 11)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:1 (1)&#xD;
root's child elements @name = unit:1 (1)&#xD;
total with @name = $mod1-3:3 (3)&#xD;
total of all module children @name = $mc1-7: is OK (&gt;= 6)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(14):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(14):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="530130">
        <surname>Prins√©n</surname>
        <firstname>Jonatan Alexander</firstname>
        <submitZip>Round_U3_sub3_530130.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:s4s-elt-invalid-content.1: The content of 'chassisType' is invalid.  Element 'element' is invalid, misplaced, or occurs too often.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:s4s-elt-invalid-content.1: The content of 'chassisType' is invalid.  Element 'element' is invalid, misplaced, or occurs too often.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:s4s-elt-invalid-content.1: The content of 'chassisType' is invalid.  Element 'element' is invalid, misplaced, or occurs too often.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:s4s-elt-invalid-content.1: The content of 'chassisType' is invalid.  Element 'element' is invalid, misplaced, or occurs too often.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(15):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(15):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="530266">
        <surname>Rintala</surname>
        <firstname>Arttu Frans Matias</firstname>
        <submitZip>Round_U3_sub3_530266.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:null)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <feedback>(1): File books.xml missing</feedback>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(16):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:java.net.MalformedURLException)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:null)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(16):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <feedback>(4): File inventions.xml missing</feedback>
        </exercise>
    </student>
    <student studentId="475392">
        <surname>Sainio</surname>
        <firstname>Henrik Juhana Vilhelmi</firstname>
        <submitZip>Round_U3_sub3_475392.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-type.3.1.1: Element 'conveyor' is a simple type, so it cannot have attributes, excepting those whose namespace name is identical to 'http://www.w3.org/2001/XMLSchema-instance' and whose [local name] is one of 'type', 'nil', 'schemaLocation' or 'noNamespaceSchemaLocation'. However, the attribute, 'type' was found.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-type.3.1.1: Element 'conveyor' is a simple type, so it cannot have attributes, excepting those whose namespace name is identical to 'http://www.w3.org/2001/XMLSchema-instance' and whose [local name] is one of 'type', 'nil', 'schemaLocation' or 'noNamespaceSchemaLocation'. However, the attribute, 'feed' was found.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-type.3.1.1: Element 'conveyor' is a simple type, so it cannot have attributes, excepting those whose namespace name is identical to 'http://www.w3.org/2001/XMLSchema-instance' and whose [local name] is one of 'type', 'nil', 'schemaLocation' or 'noNamespaceSchemaLocation'. However, the attribute, 'type' was found.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(17):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'invention'. One of '{"http://itia.aalto.fi/ns/2017/inventions/1.0/":invention}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(17):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="530389">
        <surname>Salo</surname>
        <firstname>Panu Vilho Johannes</firstname>
        <submitZip>Round_U3_sub3_530389.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>10</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{lift_module, starter_module, workstation}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'description'. One of '{name}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(1:WELLFORMED CHECK):FL(false):MSG(OPER_STD:MERGE:RESULT(NOT-COMPARED-STUFLOW-ERROR))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(1):MSG:(OPER:XMLWellFormedCheck:ERROR:ParseError at [row,col]:[17,49]
Message: Element type "xs:element" must be followed by either attribute specifications, "&gt;" or "/&gt;".)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:Element type "xs:element" must be followed by either attribute specifications, "&gt;" or "/&gt;".)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:Element type "xs:element" must be followed by either attribute specifications, "&gt;" or "/&gt;".)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:Element type "xs:element" must be followed by either attribute specifications, "&gt;" or "/&gt;".)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(18):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(18):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="544867">
        <surname>Saloranta</surname>
        <firstname>Oscar Johan</firstname>
        <submitZip>Round_U3_sub3_544867.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(3):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(5)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(5)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(2)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(5):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(8)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(8)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
total of the common module children @name = $mc1-4: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(4)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(3)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(7):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(11)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(11)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
total of all module children @name = $mc1-7: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(19):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(19):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="481386">
        <surname>Tuominen</surname>
        <firstname>Valtteri</firstname>
        <submitZip>Round_U3_sub3_481386.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(3):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(5)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(5)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(2)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(5):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(8)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(8)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
total of the common module children @name = $mc1-4: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(4)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(3)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(7):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(11)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(11)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
total of all module children @name = $mc1-7: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(20):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(20):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
    <student studentId="552969">
        <surname>Westerlund</surname>
        <firstname>Isak Rafael</firstname>
        <submitZip>Round_U3_sub3_552969.zip</submitZip>
        <exercise exerciseId="U3E1_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>19</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(2:VALIDATION_CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E2_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>8</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>7</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(3:XSLT_TRANSFORM_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(4:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(5:XSLT_TRANSFORM_2):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(6:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(7:XSLT_TRANSFORM_3):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(8:VALIDATION_CHECK_4):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(3):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(5)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(5)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(2)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'foo_module'. One of '{workstation, starter_module, lift_module}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(5):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(8)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(8)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
total of the common module children @name = $mc1-4: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(4)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;=)#EQU#(3)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(6):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'bar_sensor'. One of '{sensor}' is expected.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(7):MSG:(EQU#(XS:ELEMENTS...&#xD;
elements local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(11)&#xD;
elements with @name: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(11)&#xD;
...XS:ELEMENTS&#xD;
XS:ELEMENTS with spesific names ...&#xD;
root element @name = production_line:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
root's child elements @name = unit:)#DEL#(0)#INS#(1)#EQU#( (1)&#xD;
total with @name = $mod1-3:)#DEL#(0)#INS#(3)#EQU#( (3)&#xD;
total of all module children @name = $mc1-7: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:ELEMENTS&#xD;
XS:COMPLEXTYPE...&#xD;
local and global total: is )#DEL#(N)#EQU#(OK ()#DEL#(&lt;)#INS#(&gt;= )#EQU#(6)&#xD;
...XS:COMPLEXTYPE&#xD;
)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(8):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.2.4.a: Invalid content was found starting with element 'fool_hill'. One of '{sensor}' is expected.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E3_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <pointsOfTestCases>6</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(3:VALIDATION_CHECK_2):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(4:VALIDATION_CHECK_3):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(3):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'type' must appear on element 'conveyor'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'production_line'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(4):MSG:(OPER:XMLValidationCheck:ERROR:cvc-complex-type.4: Attribute 'width' must appear on element 'chassis'.)</errorsOfTestCases>
        </exercise>
        <exercise exerciseId="U3E4_1">
            <pointsOfTestCases>1</pointsOfTestCases>
            <pointsOfTestCases>0</pointsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(1:WELLFORMED CHECK):FL(true):MSG(OPER_STD:MERGE:RESULT(EQUAL))</resultsOfTestCases>
            <resultsOfTestCases>STD:ST(21):TC(2:VALIDATION_CHECK_1):FL(true):MSG(OPER_STD:MERGE:RESULT(NON-EQUAL))</resultsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(2):MSG:(OPER:XMLValidationCheck:ERROR:cvc-elt.1: Cannot find the declaration of element 'inventions'.)</errorsOfTestCases>
            <errorsOfTestCases>ERR:ST(21):TC(2):MSG:(DEL#(IN)#EQU#(VALID)#)</errorsOfTestCases>
        </exercise>
    </student>
</studentSubmits>
